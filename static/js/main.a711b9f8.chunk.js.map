{"version":3,"sources":["store/actionHandlers.js","store/splitReducer.js","components/Header/header.js","components/UI/modal.js","containers/Homepage/homepage.js","components/UI/input.js","containers/Users/adduser.js","assets/logo-dark.png","components/UI/card.js","containers/Users/getUserDetails.js","components/UI/dropdown.js","components/expense/userExpense.js","containers/Expense/userExpenseContainer.js","components/UI/table.js","components/expense/groupExpense.js","containers/Expense/groupExpenseContainer.js","containers/Expense/expense.js","components/expense/settleUp.js","containers/Expense/settleUpContainer.js","containers/Users/searchUser.js","containers/Users/deleteUser.js","App.js","index.js","components/expense/expense.module.css","containers/Homepage/homepage.module.css","components/UI/input.module.css","components/Header/header.module.css","containers/Users/adduser.module.css","components/UI/card.module.css","containers/Users/getUserDetails.module.css","components/UI/dropdown.module.css","components/UI/table.module.css","containers/Users/deleteUser.module.css"],"names":["updateExpenseHandler","state","action","tempState","JSON","parse","stringify","borrower","expense_obj","currentUser","currentUserShare","parseInt","borrowerShare","borrowerNeighbours","currentUserNeighbours","tempShare","splitHow","neighbours","currentUserOwed","toString","isNaN","tExpense","groupExpenseHandler","groupUserList","groupSplitMethod","borrowerShareArr","map","eqBorrowerShare","forEach","currentBorrower","index","settleUpHandler","lender","currentSettleAmt","totalSettleAmt","settleAllHandler","deleteUserHandler","temporaryState","key","delete_username","initialState","Hrishabh","TejPrakash","Partha","Prabhakar","reducer","type","Header","props","Fragment","Jumbotron","fluid","Container","className","classes","headings","NotificationModal","Modal","show","onHide","handleClose","closeButton","Title","title","Body","children","Footer","Button","variant","onClick","React","memo","Homepage","addUserOnClickHandler","history","push","seeUserDetailsHandler","addExpenseHandler","searchUserHandler","onModalCloseHandler","setState","showModal","modalVal","undefined","prev","this","style","marginTop","button","size","block","Component","withRouter","InputField","h3","Form","Group","input","Control","onChange","onChangeFunc","Adduser","inputVal","userList","Object","keys","userGraph","onChangeHandler","event","target","value","localOnClickHandler","tempUserList","toLowerCase","tempInputVal","indexOf","onClickHandler","connect","dispatch","name","UserCard","expenseList","expList","listItem","ListGroupItem","Card","width","card","Img","src","Holder","Text","text","ListGroup","GetUserDetails","displayElementList","currentVal","neighbourObj","lentStrExpenseList","currNeighbour","borrowedStrExpenseList","i","length","borrowNeighbourObj","displayStrBorr","concat","j","tempArr","subDisplayElementList","slice","rowArr","currentRow","rowIndex","Row","row","currentColumn","colIndex","Col","UserDropdown","Dropdown","Item","eventKey","onSelect","handleSelect","DropdownButton","id","dropdown","UserExpense","targetExpense","useRef","targetShared","handleSelectForUser","para","handleSelectForBorrower","Label","label","InputGroup","marginBottom","Prepend","FormControl","classForExpenseInput","ref","Overlay","current","placement","arrowProps","popper","backgroundColor","padding","color","borderRadius","handleSelectForSplitter","showManualSplitter","classForSharedInput","onChangeHandlerforManual","disabled","submitStatus","onClicked","UserExpenseContainer","isExpenseInputValid","isSharedInputValid","total_expense","validateNumber","strNumber","RegExp","test","onSelectHandlerForUserAndBorrower","eventId","localIndex","splice","onSelectHandlerForSplitter","Math","round","tempCurrentUserShare","submitStatusHandler","localOnClickHandlerForUser","newState","modalContent","UserTable","rowList","Table","striped","bordered","hover","table","head","GroupExpense","showTable","onChangeForGp","onSelectforSplitter","classForSharedInputArr","onChangeforGpManual","GroupExpenseContainer","selectHandlerForCurrentUser","onSelectHandlerForGroup","localGroupUserList","localUserList","splitHandlerForGroup","eachShare","onChangeHandlerForGpManual","tot_expense","input_valid","total_sum","reduce","a","b","submitStatusHandlerForGroup","Expense","splitWith","finalExpenseDisplay","localSplitHow","handleSelectForLender","lenderList","margin","settleAllClick","SettleUpContainer","borrowerSelectHandler","tempLenderList","tempUserGraph","user","lenderSelectHandler","tempBorrower","onAmtChangeHandler","settleAllClickHandler","SearchUser","onSelectHandler","userExpenseList","showSearchResult","userName","modContent","DeleteUser","showButton","onDeleteHandler","App","path","exact","component","SettleUp","to","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a711b9f8.chunk.js","sourcesContent":["export const updateExpenseHandler = (state, action) => {\r\n  let tempState = JSON.parse(JSON.stringify(state));\r\n  const borrower = action.expense_obj.borrower;\r\n  const currentUser = action.expense_obj.currentUser;\r\n  const currentUserShare = parseInt(action.expense_obj.currentUserShare);\r\n  const borrowerShare = parseInt(action.expense_obj.borrowerShare);\r\n  let borrowerNeighbours = null;\r\n  let currentUserNeighbours = null;\r\n  let tempShare = 0;\r\n\r\n  if (action.expense_obj.splitHow !== \"Split How?\") {\r\n    borrowerNeighbours = tempState[borrower].neighbours;\r\n    currentUserNeighbours = tempState[currentUser].neighbours;\r\n\r\n    if (action.expense_obj.currentUserOwed !== \"0\") {\r\n      let currentUserOwed = parseInt(action.expense_obj.currentUserOwed);\r\n      if (borrower in currentUserNeighbours) {\r\n        if (\r\n          currentUserOwed > parseInt(currentUserNeighbours[borrower])\r\n        ) {\r\n          tempShare =\r\n            currentUserOwed -\r\n            parseInt(currentUserNeighbours[borrower]);\r\n          borrowerNeighbours[currentUser] = tempShare.toString();\r\n          delete currentUserNeighbours[borrower];\r\n        } else if (\r\n          currentUserOwed ===\r\n          parseInt(currentUserNeighbours[borrower])\r\n        ) {\r\n          delete currentUserNeighbours[borrower];\r\n        } else {\r\n          tempShare =\r\n            parseInt(currentUserNeighbours[borrower]) -\r\n            currentUserOwed;\r\n          currentUserNeighbours[borrower] = tempShare.toString();\r\n        }\r\n      } else if (currentUser in borrowerNeighbours) {\r\n        borrowerNeighbours[currentUser] = (\r\n          parseInt(borrowerNeighbours[currentUser]) + currentUserOwed\r\n        ).toString();\r\n      } else {\r\n        borrowerNeighbours[currentUser] = currentUserOwed.toString();\r\n      }\r\n    } else if (currentUser in borrowerNeighbours) {\r\n      if (\r\n        borrowerShare > parseInt(borrowerNeighbours[currentUser])\r\n      ) {\r\n        tempShare =\r\n          borrowerShare - parseInt(borrowerNeighbours[currentUser]);\r\n        delete borrowerNeighbours[currentUser];\r\n        currentUserNeighbours[borrower] = tempShare.toString();\r\n      } else if (\r\n        borrowerShare < parseInt(borrowerNeighbours[currentUser])\r\n      ) {\r\n        tempShare =\r\n          parseInt(borrowerNeighbours[currentUser]) - borrowerShare;\r\n        borrowerNeighbours[currentUser] = tempShare.toString();\r\n      } else {\r\n        delete borrowerNeighbours[currentUser];\r\n      }\r\n    } else {\r\n      currentUserNeighbours[borrower] = (\r\n        (isNaN(parseInt(currentUserNeighbours[borrower]))\r\n          ? 0\r\n          : parseInt(currentUserNeighbours[borrower])) +\r\n        borrowerShare\r\n      ).toString();\r\n    }\r\n  }\r\n\r\n  tempState[currentUser].tExpense = (\r\n    parseInt(tempState[currentUser].tExpense) + currentUserShare\r\n  ).toString();\r\n\r\n  return tempState;\r\n};\r\n\r\nexport const groupExpenseHandler = (state, action) => {\r\n  let tempState = JSON.parse(JSON.stringify(state));\r\n  const groupUserList = action.expense_obj.groupUserList;\r\n  const groupSplitMethod = action.expense_obj.groupSplitMethod;\r\n  let borrowerShareArr = null;\r\n  let tempShare = 0;\r\n\r\n  if (\r\n    groupSplitMethod === \"Equally\" ||\r\n    groupSplitMethod === \"Group owes the entire amount equally\"\r\n  ) {\r\n    borrowerShareArr = groupUserList.map(() => {\r\n      return action.expense_obj.eqBorrowerShare;\r\n    });\r\n  } else {\r\n    borrowerShareArr = action.expense_obj.borrowerShareArr;\r\n  }\r\n\r\n  const currentUser = action.expense_obj.currentUser;\r\n  const currentUserShare = parseInt(action.expense_obj.currentUserShare);\r\n  const currentUserNeighbours = tempState[currentUser].neighbours;\r\n\r\n  groupUserList.forEach((currentBorrower, index) => {\r\n    let borrowerNeighbours = tempState[currentBorrower].neighbours;\r\n\r\n    if (currentUser in borrowerNeighbours) {\r\n      if (\r\n        parseInt(borrowerShareArr[index]) >\r\n        parseInt(borrowerNeighbours[currentUser])\r\n      ) {\r\n        tempShare =\r\n          parseInt(borrowerShareArr[index]) -\r\n          parseInt(borrowerNeighbours[currentUser]);\r\n        delete borrowerNeighbours[currentUser];\r\n        currentUserNeighbours[currentBorrower] = tempShare.toString();\r\n      } else if (\r\n        parseInt(borrowerShareArr[index]) <\r\n        parseInt(borrowerNeighbours[currentUser])\r\n      ) {\r\n        tempShare =\r\n          parseInt(borrowerNeighbours[currentUser]) -\r\n          parseInt(borrowerShareArr[index]);\r\n        borrowerNeighbours[currentUser] = tempShare.toString();\r\n      } else {\r\n        delete borrowerNeighbours[currentUser];\r\n      }\r\n    } else {\r\n      currentUserNeighbours[currentBorrower] = (\r\n        (isNaN(parseInt(currentUserNeighbours[currentBorrower]))\r\n          ? 0\r\n          : parseInt(currentUserNeighbours[currentBorrower])) +\r\n        parseInt(borrowerShareArr[index])\r\n      ).toString();\r\n    }\r\n  });\r\n\r\n  tempState[currentUser].tExpense = (\r\n    parseInt(tempState[currentUser].tExpense) + currentUserShare\r\n  ).toString();\r\n\r\n  return tempState;\r\n};\r\n\r\nexport const settleUpHandler = (state, action) => {\r\n  let tempState = JSON.parse(JSON.stringify(state));\r\n\r\n  const borrower = action.expense_obj.borrower;\r\n  const lender = action.expense_obj.lender;\r\n  const currentSettleAmt = parseInt(action.expense_obj.currentSettleAmt);\r\n  const totalSettleAmt = parseInt(action.expense_obj.totalSettleAmt);\r\n\r\n  if (currentSettleAmt < totalSettleAmt) {\r\n    tempState[lender].neighbours[borrower] = (\r\n      totalSettleAmt - currentSettleAmt\r\n    ).toString();\r\n  } else {\r\n    delete tempState[lender].neighbours[borrower];\r\n  }\r\n\r\n  return tempState;\r\n};\r\n\r\nexport const settleAllHandler = (state, action) => {\r\n  let tempState = JSON.parse(JSON.stringify(state))\r\n  const borrower = action.expense_obj.borrower;\r\n  const lender = action.expense_obj.lender;\r\n\r\n  delete tempState[lender].neighbours[borrower]\r\n\r\n  return tempState;\r\n}\r\n\r\nexport const deleteUserHandler = (state, action) => {\r\n  let temporaryState = JSON.parse(JSON.stringify(state));\r\n  delete temporaryState[action.delete_username];\r\n\r\n  for (let key in temporaryState) {\r\n    if (action.delete_username in temporaryState[key].neighbours) {\r\n      delete temporaryState[key].neighbours[action.delete_username];\r\n    }\r\n  }\r\n\r\n  return temporaryState;\r\n};\r\n","import { updateExpenseHandler, deleteUserHandler, groupExpenseHandler, settleUpHandler, settleAllHandler } from \"./actionHandlers\";\r\n\r\nconst initialState = {\r\n  Hrishabh: {\r\n    neighbours: {\r\n      TejPrakash: \"1500\",\r\n    },\r\n    tExpense: \"10000\"\r\n  },\r\n  Partha: {\r\n    neighbours: {\r\n      Hrishabh: \"6000\",\r\n      TejPrakash: \"5000\",\r\n    },\r\n    tExpense: \"10000\",\r\n  },\r\n  TejPrakash: {\r\n    neighbours: {\r\n      Prabhakar: \"7000\",\r\n    },\r\n    tExpense: \"10000\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"addUser\":\r\n      state[action.key] = { tExpense: \"0\", neighbours: {} };\r\n      return state;\r\n\r\n    case \"update_expense\":\r\n      return updateExpenseHandler(state, action);\r\n\r\n    case \"update_group_expense\":\r\n      return groupExpenseHandler(state, action);  \r\n\r\n    case \"delete_user\":\r\n      return deleteUserHandler(state, action);\r\n\r\n    case \"settle_due\":\r\n      return settleUpHandler(state, action);  \r\n\r\n    case \"settle_due_all\":\r\n      return settleAllHandler(state, action);  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport classes from \"./header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1 className={classes.headings}>Splitwise-Clone</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst NotificationModal = (props) => {\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={props.handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default React.memo(NotificationModal);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../components/Header/header.js\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport classes from \"./homepage.module.css\";\r\nimport { withRouter } from \"react-router\";\r\nimport Modal from '../../components/UI/modal';\r\n\r\n\r\nclass Homepage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let modalVal = false;\r\n    if(this.props.history.prev !== undefined){\r\n      modalVal = true;\r\n    }\r\n    this.state = {\r\n      showModal: modalVal\r\n    }\r\n\r\n    delete this.props.history.prev;\r\n  }\r\n  \r\n  addUserOnClickHandler = () => {\r\n    this.props.history.push('/addUser');\r\n  }\r\n\r\n  seeUserDetailsHandler = () => {\r\n    this.props.history.push('/userDetails');\r\n  }\r\n\r\n  addExpenseHandler = () => {\r\n    this.props.history.push('/addExpense');\r\n  }\r\n\r\n  searchUserHandler = () => {\r\n    this.props.history.push('/searchUser');\r\n  }\r\n\r\n  settleUpHandler = () => {\r\n    this.props.history.push('/settleUp');\r\n  }\r\n\r\n  deleteUserHandler = () => {\r\n    this.props.history.push('/deleteUser');\r\n  }\r\n\r\n  onModalCloseHandler = () => {\r\n    this.setState({\r\n      showModal: false\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Modal show={this.state.showModal} title=\"User created.\" handleClose={this.onModalCloseHandler}> The user was created successsfully. </Modal>\r\n        <Header />{\" \"}\r\n        <Button\r\n          onClick={this.addUserOnClickHandler}\r\n          style={{ marginTop: \"120px\" }}\r\n          className={classes.button}\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Add User\r\n        </Button>\r\n        <Button onClick={this.seeUserDetailsHandler} className={classes.button} variant=\"primary\" size=\"lg\" block>\r\n          View all users\r\n        </Button>\r\n        <Button onClick={this.searchUserHandler} className={classes.button} variant=\"primary\" size=\"lg\" block>\r\n          Search User\r\n        </Button>\r\n        <Button onClick={this.deleteUserHandler} className={classes.button} variant=\"primary\" size=\"lg\" block>\r\n          Delete User\r\n        </Button>\r\n        <Button onClick={this.addExpenseHandler} className={classes.button} variant=\"primary\" size=\"lg\" block>\r\n          Add Expense\r\n        </Button>\r\n        <Button onClick={this.settleUpHandler} className={classes.button} variant=\"primary\" size=\"lg\" block>\r\n          Settle-Up\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Homepage);\r\n","import React from \"react\";\r\nimport classes from \"./input.module.css\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst InputField = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className={classes.h3}>Enter the user's name</h3>\r\n      <Form.Group className={classes.input}>\r\n        <Form.Control onChange={props.onChangeFunc} size=\"lg\" type=\"text\" />\r\n      </Form.Group>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(InputField);\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Input from \"../../components/UI/input\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport classes from \"./adduser.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../../components/UI/modal';\r\nimport {withRouter} from 'react-router';\r\n\r\nclass Adduser extends Component {\r\n\r\n  state = {\r\n    inputVal: \"\",\r\n    showModal: false,\r\n    userList: Object.keys(this.props.userGraph)\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({\r\n      inputVal: event.target.value\r\n    })\r\n  }\r\n\r\n  localOnClickHandler = () => {\r\n    const tempUserList = this.state.userList.map((currentUser) => {\r\n      return currentUser.toLowerCase();\r\n    })\r\n    const tempInputVal = this.state.inputVal.toLowerCase();\r\n    if(tempUserList.indexOf(tempInputVal) === -1){\r\n      this.props.onClickHandler(this.state.inputVal);\r\n      this.props.history.prev = \"/addUser\"\r\n      this.props.history.push('/')\r\n    }\r\n    else{\r\n      this.setState({\r\n        showModal: true\r\n      })\r\n    }\r\n  }\r\n\r\n  onModalCloseHandler = () => {\r\n    this.setState({\r\n      showModal: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal show={this.state.showModal} title=\"User not created\" handleClose={this.onModalCloseHandler}> The user already exists. </Modal>\r\n        <Input onChangeFunc = {(event) => this.onChangeHandler(event)}/>\r\n        <Button\r\n          onClick={this.localOnClickHandler}\r\n          className={classes.button}\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Add\r\n        </Button>{\" \"}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGraph: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClickHandler: (name) => {dispatch({\"type\":\"addUser\", \"key\":name})}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Adduser));\r\n","export default __webpack_public_path__ + \"static/media/logo-dark.ef20e673.png\";","import React from \"react\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport Holder from '../../assets/logo-dark.png'\r\nimport classes from './card.module.css';\r\n\r\nconst UserCard = (props) => {\r\n\r\n  const expenseList = props.expList.map((listItem, index) => {\r\n    return (\r\n      <ListGroupItem key={index}>\r\n        {listItem}\r\n      </ListGroupItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card style={{ width: \"18rem\" }} className={classes.card}>\r\n        <Card.Img variant=\"top\" src={Holder} />\r\n        <Card.Body>\r\n          <Card.Title>{props.title}</Card.Title>\r\n          <Card.Text>\r\n            {props.text}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <ListGroup className=\"list-group-flush\">\r\n          {expenseList}\r\n        </ListGroup>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserCard);\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserCard from \"../../components/UI/card\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./getUserDetails.module.css\";\r\n\r\nclass GetUserDetails extends Component {\r\n  render() {\r\n    const userList = Object.keys(this.props.userGraph);\r\n\r\n    const displayElementList = userList.map((currentVal, index) => {\r\n      const neighbourObj =\r\n        this.props.userGraph[currentVal.toString()].neighbours;\r\n      const lentStrExpenseList = Object.keys(neighbourObj).map(\r\n        (currNeighbour) => {\r\n          const displayStrLent =\r\n            currentVal +\r\n            \" has lent Rs \" +\r\n            neighbourObj[currNeighbour.toString()] +\r\n            \" to \" +\r\n            currNeighbour;\r\n          return displayStrLent;\r\n        }\r\n      );\r\n\r\n      const borrowedStrExpenseList = [];\r\n      for (let i = 0; i < userList.length; i++) {\r\n        const currentUser = userList[i];\r\n        const borrowNeighbourObj =\r\n          this.props.userGraph[currentUser.toString()].neighbours;\r\n        let displayStrBorr = \"\";\r\n        if (currentUser !== currentVal) {\r\n          if (currentVal in borrowNeighbourObj) {\r\n            displayStrBorr =\r\n              currentVal +\r\n              \" has borrowed Rs \" +\r\n              borrowNeighbourObj[currentVal.toString()] +\r\n              \" from \" +\r\n              currentUser;\r\n            borrowedStrExpenseList.push(displayStrBorr);\r\n          }\r\n        }\r\n      }\r\n\r\n      const expenseList = lentStrExpenseList.concat(borrowedStrExpenseList);\r\n\r\n      return (\r\n        <div key={index}>\r\n          <UserCard\r\n            expList={expenseList}\r\n            title={\"Expense list for \" + currentVal}\r\n            text={\r\n              \"Total individual expense: Rs \" +\r\n              this.props.userGraph[currentVal.toString()].tExpense\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    while(displayElementList.length % 3 !== 0){\r\n      displayElementList.push(\"\");\r\n    }\r\n\r\n    let i,j,tempArr,chunk = 3;\r\n\r\n    let subDisplayElementList = [];\r\n\r\n    for (i = 0, j = displayElementList.length; i < j; i += chunk) {\r\n      tempArr = displayElementList.slice(i, i + chunk);\r\n      subDisplayElementList.push(tempArr);\r\n    }\r\n\r\n\r\n    const rowArr = subDisplayElementList.map((currentRow, rowIndex) => {\r\n      let rowElement = (\r\n        <Row className={classes.row} key={rowIndex}>\r\n          {currentRow.map((currentColumn, colIndex) => {\r\n            return <Col key={colIndex}>{currentColumn}</Col>;\r\n          })}\r\n        </Row>\r\n      );\r\n      return rowElement\r\n    });\r\n\r\n    return (\r\n      <div>{rowArr}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGraph: state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GetUserDetails);\r\n","import React from \"react\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport classes from \"./dropdown.module.css\";\r\n\r\nconst UserDropdown = (props) => {\r\n  const userList = props.children.map((currentUser) => {\r\n    return (\r\n      <Dropdown.Item\r\n        key={currentUser}\r\n        eventKey={currentUser}\r\n        onSelect={props.handleSelect}\r\n      >\r\n        {currentUser}\r\n      </Dropdown.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <DropdownButton id=\"dropdown-basic-button\" title={props.title} size={props.size} className={classes.dropdown}>\r\n        {userList}\r\n      </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default React.memo(UserDropdown);\r\n","import React, { useRef } from \"react\";\r\nimport Dropdown from \"../../components/UI/dropdown\";\r\nimport classes from \"./expense.module.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Button,\r\n  Overlay,\r\n} from \"react-bootstrap\";\r\n\r\nconst UserExpense = (props) => {\r\n  const targetExpense = useRef(null);\r\n  const targetShared = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>\r\n          <Dropdown\r\n            title={props.currentUser}\r\n            handleSelect={props.handleSelectForUser}\r\n            size=\"lg\"\r\n          >\r\n            {props.userList}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <h5 className={classes.para}>want's to split expense with</h5>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            title={props.borrower}\r\n            handleSelect={props.handleSelectForBorrower}\r\n            size=\"lg\"\r\n          >\r\n            {props.userList}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>\r\n          <Form.Label>\r\n            <h5 className={classes.label}>Enter Expense:</h5>\r\n          </Form.Label>\r\n          <InputGroup style={{ marginBottom: \"10px\" }} className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Rs</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              className={classes[props.classForExpenseInput]}\r\n              ref={targetExpense}\r\n              id=\"inlineFormInputGroup\"\r\n              onChange={props.onChangeHandler}\r\n            />\r\n          </InputGroup>\r\n          <Overlay\r\n            target={targetExpense.current}\r\n            show={props.classForExpenseInput  ? true : null}\r\n            placement=\"right\"\r\n          >\r\n            {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n              <div\r\n                {...props}\r\n                style={{\r\n                  backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                  padding: \"2px 10px\",\r\n                  color: \"white\",\r\n                  borderRadius: 3,\r\n                  ...props.style,\r\n                }}\r\n              >\r\n                Please enter a valid integer.\r\n              </div>\r\n            )}\r\n          </Overlay>\r\n        </Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n      </Row>\r\n      {props.borrower !== \"No one\" ? (\r\n        <Row>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n\r\n          <Dropdown\r\n            title={\"Split Method\"}\r\n            handleSelect={props.handleSelectForSplitter}\r\n            size=\"lg\"\r\n          >\r\n            {[\r\n              \"Equally\",\r\n              \"Manually\",\r\n              \"You owe the full amount\",\r\n              props.borrower + \" owes the full amount\",\r\n            ]}\r\n          </Dropdown>\r\n\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n        </Row>\r\n      ) : null}\r\n      {props.showManualSplitter !== false ? (\r\n        <Row>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col>\r\n            <Form.Label>\r\n              <h5 className={classes.label}>\r\n                Enter amount to be lent to {props.borrower}:\r\n              </h5>\r\n            </Form.Label>\r\n            <InputGroup className=\"mb-2\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>Rs</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                className={classes[props.classForSharedInput]}\r\n                id=\"inlineFormInputGroup\"\r\n                onChange={props.onChangeHandlerforManual}\r\n                ref={targetShared}\r\n              />\r\n            </InputGroup>\r\n            <Overlay\r\n              target={targetShared.current}\r\n              show={props.classForSharedInput  ? true : null}\r\n              placement=\"right\"\r\n            >\r\n              {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n                <div\r\n                  {...props}\r\n                  style={{\r\n                    backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                    padding: \"2px 10px\",\r\n                    color: \"white\",\r\n                    borderRadius: 3,\r\n                    ...props.style,\r\n                  }}\r\n                >\r\n                  Please enter a valid integer and <br />\r\n                  a value less than the total expense.\r\n                </div>\r\n              )}\r\n            </Overlay>\r\n          </Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n          <Col></Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Button\r\n          disabled={!props.submitStatus}\r\n          onClick={props.onClicked}\r\n          className={classes.button}\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Col></Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserExpense;\r\n","import React, { Component } from \"react\";\r\nimport UserExpense from \"../../components/expense/userExpense\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router';\r\n\r\nclass UserExpenseContainer extends Component {\r\n    state = {\r\n        splitHow: \"Split How?\",\r\n        currentUser: \"Who are you?\",\r\n        borrower: \"No one\",\r\n        userList: Object.keys(this.props.userGraph),\r\n        isExpenseInputValid: false,\r\n        isSharedInputValid: false,\r\n        total_expense: null,\r\n        currentUserShare: \"0\",\r\n        borrowerShare: \"0\",\r\n        currentUserOwed: \"0\",\r\n        showManualSplitter: false,\r\n    };\r\n\r\n    classForExpenseInput = null;\r\n    classForSharedInput = null;\r\n\r\n    validateNumber = (strNumber) => {\r\n        var regExp = new RegExp(\"^\\\\d+$\");\r\n        var isValid = regExp.test(strNumber);\r\n        return isValid;\r\n    };\r\n\r\n    onSelectHandlerForUserAndBorrower = (eventId, type) => {\r\n        let tempArr = Object.keys(this.props.userGraph);\r\n        let index = tempArr.indexOf(eventId);\r\n        let localIndex = 0;\r\n        let tempState = { ...this.state };\r\n\r\n        if (type === \"User\") {\r\n            tempState.currentUser = eventId;\r\n            tempArr.splice(index, 1);\r\n            if (tempState.borrower !== \"No one\") {\r\n                localIndex = tempArr.indexOf(tempState.borrower);\r\n                tempArr.splice(localIndex, 1);\r\n            }\r\n        } else {\r\n            tempState.borrower = eventId;\r\n            tempArr.splice(index, 1);\r\n            if (tempState.currentUser !== \"Who are you?\") {\r\n                localIndex = tempArr.indexOf(tempState.currentUser);\r\n                tempArr.splice(localIndex, 1);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...tempState,\r\n            userList: [...tempArr],\r\n        });\r\n    };\r\n\r\n    onSelectHandlerForSplitter = (eventId) => {\r\n        let tempState = { ...this.state, userList: [...this.state.userList] };\r\n        if (eventId === \"Equally\") {\r\n            tempState.currentUserShare = tempState.borrowerShare = (\r\n                Math.round(parseInt(tempState.total_expense) / 2)\r\n            ).toString();\r\n            tempState.isSharedInputValid = true;\r\n            tempState.showManualSplitter = false;\r\n        } else if (eventId === \"Manually\") {\r\n            tempState.showManualSplitter = true;\r\n            tempState.isSharedInputValid = false;\r\n        } else if (eventId === \"You owe the full amount\") {\r\n            tempState.isSharedInputValid = true;\r\n            tempState.showManualSplitter = false;\r\n            tempState.currentUserOwed = tempState.total_expense;\r\n        } else {\r\n            tempState.borrowerShare = tempState.total_expense;\r\n            tempState.isSharedInputValid = true;\r\n            tempState.showManualSplitter = false;\r\n        }\r\n\r\n        this.setState({\r\n            ...tempState,\r\n            splitHow: eventId,\r\n        });\r\n    };\r\n\r\n\r\n    onChangeHandler = (event, type) => {\r\n        if (type === \"expense\") {\r\n            if (this.validateNumber(event.target.value)) {\r\n                this.classForExpenseInput = null;\r\n                this.setState({\r\n                    total_expense: event.target.value,\r\n                    isExpenseInputValid: true,\r\n                });\r\n            } else {\r\n                this.classForExpenseInput = \"formControl\";\r\n                this.setState({\r\n                    isExpenseInputValid: false,\r\n                });\r\n            }\r\n        } else {\r\n            if (\r\n                this.validateNumber(event.target.value) &&\r\n                parseInt(event.target.value) < parseInt(this.state.total_expense)\r\n            ) \r\n            {\r\n                const tempCurrentUserShare = (parseInt(this.state.total_expense) - parseInt(event.target.value)).toString()\r\n                this.classForSharedInput = null;\r\n                this.setState({\r\n                    borrowerShare: event.target.value,\r\n                    isSharedInputValid: true,\r\n                    currentUserShare: tempCurrentUserShare\r\n                });\r\n            } else {\r\n                this.classForSharedInput = \"formControl\";\r\n                this.setState({\r\n                    isSharedInputValid: false,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    submitStatusHandler = () => {\r\n        let returnVal = false;\r\n        if (\r\n            this.state.borrower === \"No one\" &&\r\n            this.state.isExpenseInputValid &&\r\n            this.state.currentUser !== \"Who are you?\"\r\n        ) {\r\n            returnVal = true;\r\n        } else if (\r\n            this.state.borrower !== \"No one\" &&\r\n            this.state.isExpenseInputValid &&\r\n            (this.state.isSharedInputValid ||\r\n                this.state.splitHow === \"Equally\" ||\r\n                this.state.splitHow === \"You owe the full amount\" ||\r\n                this.state.splitHow === this.state.borrower + \" owes the full amount\")\r\n        ) {\r\n            returnVal = true;\r\n        } else {\r\n            returnVal = false;\r\n        }\r\n        return returnVal;\r\n    };\r\n\r\n\r\n    localOnClickHandlerForUser = () => {\r\n        const newState = {\r\n            currentUser: this.state.currentUser,\r\n            borrower: this.state.borrower,\r\n            currentUserShare:\r\n                this.state.borrower !== \"No one\"\r\n                    ? this.state.currentUserShare\r\n                    : this.state.total_expense,\r\n            borrowerShare: this.state.borrowerShare,\r\n            splitHow: this.state.splitHow,\r\n            currentUserOwed: this.state.currentUserOwed\r\n        };\r\n\r\n        this.props.onClickHandler(newState);\r\n        this.props.history.prev = \"/userExpenseContainer\";\r\n        this.props.history.modalContent = \"The one to one user expense was added successfully, please use the search to confirm.\";\r\n        this.props.history.push(\"/searchUser\");\r\n    };\r\n\r\n\r\n    render() {\r\n        return <React.Fragment><UserExpense\r\n            currentUser={this.state.currentUser}\r\n            borrower={this.state.borrower}\r\n            userList={this.state.userList}\r\n            handleSelectForUser={(eventId) =>\r\n                this.onSelectHandlerForUserAndBorrower(eventId, \"User\")\r\n            }\r\n            handleSelectForBorrower={(eventId) =>\r\n                this.onSelectHandlerForUserAndBorrower(eventId, \"Borrower\")\r\n            }\r\n            handleSelectForSplitter={(eventId) =>\r\n                this.onSelectHandlerForSplitter(eventId)\r\n            }\r\n            onChangeHandler={(event) => this.onChangeHandler(event, \"expense\")}\r\n            onChangeHandlerforManual={(event) =>\r\n                this.onChangeHandler(event, \"shared\")\r\n            }\r\n            submitStatus={this.submitStatusHandler()}\r\n            onClicked={this.localOnClickHandlerForUser}\r\n            classForExpenseInput={this.classForExpenseInput}\r\n            classForSharedInput={this.classForSharedInput}\r\n            showManualSplitter={this.state.showManualSplitter}\r\n        /></React.Fragment>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userGraph: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickHandler: (expense_obj) => {\r\n            dispatch({ type: \"update_expense\", expense_obj: expense_obj });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserExpenseContainer));\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport classes from \"./table.module.css\";\r\n\r\nconst UserTable = (props) => {\r\n\r\n  const rowList = props.groupUserList.map((currentUser, index) => {\r\n      return (\r\n        <tr key={index}>\r\n        <td>{index + 1}</td>\r\n        <td>{currentUser}</td>\r\n      </tr>\r\n      )\r\n  })      \r\n  return (\r\n    <Table striped bordered hover className={classes.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>User No.</th>\r\n          <th>{props.head}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rowList}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import React, { useRef } from \"react\";\r\nimport Table from \"../UI/table\";\r\nimport Dropdown from \"../../components/UI/dropdown\";\r\nimport classes from \"./expense.module.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Button,\r\n  Overlay\r\n} from \"react-bootstrap\";\r\n\r\nconst GroupExpense = (props) => {\r\n  const targetExpense = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col>\r\n          <Dropdown\r\n            title={props.currentUser}\r\n            handleSelect={props.handleSelectForUser}\r\n            size=\"lg\"\r\n          >\r\n            {props.userList}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            title=\"Select other users\"\r\n            size=\"lg\"\r\n            handleSelect={props.onSelect}\r\n          >\r\n            {props.children}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col></Col>\r\n      </Row>\r\n      {props.showTable ? (\r\n        <Row>\r\n          <Col></Col>\r\n          <Table head=\"User Name\" groupUserList={props.groupUserList} />\r\n          <Col></Col>\r\n        </Row>\r\n      ) : null}\r\n      {props.groupUserList.length > 1 ? (\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col></Col>\r\n\r\n            <Col>\r\n              <Form.Label>\r\n                <h5 className={classes.label}>Enter Expense:</h5>\r\n              </Form.Label>\r\n              <InputGroup style={{ marginBottom: \"10px\" }} className=\"mb-2\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Rs</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  className={classes[props.classForExpenseInput]}\r\n                  id=\"inlineFormInputGroup\"\r\n                  onChange={props.onChangeForGp}\r\n                  ref={targetExpense}\r\n                />\r\n              </InputGroup>\r\n              <Overlay\r\n                target={targetExpense.current}\r\n                show={props.classForExpenseInput ? true : null}\r\n                placement=\"right\"\r\n              >\r\n                {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n                  <div\r\n                    {...props}\r\n                    style={{\r\n                      backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                      padding: \"2px 10px\",\r\n                      color: \"white\",\r\n                      borderRadius: 3,\r\n                      ...props.style,\r\n                    }}\r\n                  >\r\n                    Please enter a valid integer.\r\n                  </div>\r\n                )}\r\n              </Overlay>\r\n            </Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col>\r\n              <Form.Label style={{ marginTop: \"45px\" }}>\r\n                <h5 className={classes.label}>\r\n                  Your Share: Rs {props.currentUserShare}\r\n                </h5>\r\n              </Form.Label>\r\n            </Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Dropdown\r\n              title={props.groupSplitMethod}\r\n              size=\"lg\"\r\n              handleSelect={props.onSelectforSplitter}\r\n            >\r\n              {[\"Equally\", \"Manually\",\"Group owes the entire amount equally\"]}\r\n            </Dropdown>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.showManualSplitter\r\n        ? props.groupUserList.map((currentUser, index) => {\r\n            return (\r\n              <Row key={index} style={{ marginTop: \"30px\" }}>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col>\r\n                  <Form.Label>\r\n                    <h5 className={classes.label}>\r\n                      Enter amount to be lent to {currentUser}:\r\n                    </h5>\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>Rs</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      className={classes[props.classForSharedInputArr[index]]}\r\n                      onChange={(event) =>\r\n                        props.onChangeforGpManual(event, index)\r\n                      }\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n              </Row>\r\n            );\r\n          })\r\n        : null}\r\n      <Row>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Button\r\n          disabled={!props.submitStatus}\r\n          onClick={props.onClick}\r\n          className={classes.button}\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Col></Col>\r\n        <Col></Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GroupExpense;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GroupExpense from \"../../components/expense/groupExpense\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass GroupExpenseContainer extends Component {\r\n  state = {\r\n    currentUser: \"Who are you?\",\r\n    userList: Object.keys(this.props.userGraph),\r\n    total_expense: null,\r\n    currentUserShare: \"0\",\r\n    isExpenseInputValid: false,\r\n    isSharedInputValid: false,\r\n    showManualSplitter: false,\r\n    showTable: false,\r\n    groupUserList: [],\r\n    groupSplitMethod: \"Split How?\",\r\n    borrowerShareArr: [],\r\n    eqBorrowerShare: \"0\",\r\n  };\r\n\r\n  classForExpenseInput = null;\r\n  classForSharedInputArr = [];\r\n\r\n  validateNumber = (strNumber) => {\r\n    var regExp = new RegExp(\"^\\\\d+$\");\r\n    var isValid = regExp.test(strNumber);\r\n    return isValid;\r\n  };\r\n\r\n  onChangeHandler = (event) => {\r\n    if (this.validateNumber(event.target.value)) {\r\n      this.classForExpenseInput = null;\r\n      this.setState({\r\n        total_expense: event.target.value,\r\n        isExpenseInputValid: true,\r\n      });\r\n    } else {\r\n      this.classForExpenseInput = \"formControl\";\r\n      this.setState({\r\n        isExpenseInputValid: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  selectHandlerForCurrentUser = (eventId) => {\r\n    let tempArr = Object.keys(this.props.userGraph);\r\n    let index = tempArr.indexOf(eventId);\r\n    let tempState = {\r\n      ...this.state,\r\n      userList: tempArr,\r\n      groupUserList: [...this.state.groupUserList],\r\n      currentUser: eventId,\r\n    };\r\n    tempArr.splice(index, 1);\r\n    this.setState({\r\n      ...tempState,\r\n    });\r\n  };\r\n\r\n  onSelectHandlerForGroup = (eventId) => {\r\n    let localGroupUserList = [...this.state.groupUserList];\r\n    let localUserList = [...this.state.userList];\r\n    const index = localUserList.indexOf(eventId);\r\n    localUserList.splice(index, 1);\r\n    this.classForSharedInputArr.push(null);\r\n    localGroupUserList.push(eventId);\r\n    this.setState({\r\n      groupUserList: [...localGroupUserList],\r\n      userList: [...localUserList],\r\n      showTable: true,\r\n    });\r\n  };\r\n\r\n  splitHandlerForGroup = (eventId) => {\r\n    const localGroupUserList = [...this.state.groupUserList];\r\n    let eachShare = 0;\r\n    if (eventId === \"Equally\") {\r\n      eachShare = Math.round(\r\n        parseInt(this.state.total_expense) / (localGroupUserList.length + 1)\r\n      );\r\n      this.setState({\r\n        eqBorrowerShare: eachShare.toString(),\r\n        currentUserShare: eachShare.toString(),\r\n        groupSplitMethod: eventId,\r\n        showManualSplitter: false,\r\n      });\r\n    } else if (eventId === \"Group owes the entire amount equally\") {\r\n      eachShare = Math.round(\r\n        parseInt(this.state.total_expense) / localGroupUserList.length\r\n      );\r\n      this.setState({\r\n        eqBorrowerShare: eachShare.toString(),\r\n        currentUserShare: \"0\",\r\n        groupSplitMethod: eventId,\r\n        showManualSplitter: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showManualSplitter: true,\r\n        groupSplitMethod: eventId,\r\n        currentUserShare: \"0\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeHandlerForGpManual = (event, index) => {\r\n    let tempArr = [...this.state.borrowerShareArr];\r\n    tempArr[index] = event.target.value;\r\n    let tot_expense = parseInt(this.state.total_expense);\r\n\r\n    let input_valid = false;\r\n\r\n    if (this.validateNumber(event.target.value)) {\r\n      let total_sum = tempArr.reduce((a, b) => parseInt(a) + parseInt(b), 0);\r\n      if (total_sum <= tot_expense) {\r\n        this.classForSharedInputArr[index] = null;\r\n        input_valid = true;\r\n        this.setState({\r\n          borrowerShareArr: [...tempArr],\r\n          isSharedInputValid: input_valid,\r\n          currentUserShare: (tot_expense - total_sum).toString(),\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.classForSharedInputArr[index] = \"formControl\";\r\n    this.setState({\r\n      isSharedInputValid: input_valid,\r\n    });\r\n  };\r\n\r\n  submitStatusHandlerForGroup = () => {\r\n    if (\r\n      (this.state.groupSplitMethod === \"Equally\" ||\r\n        this.state.groupSplitMethod === \"Group owes the entire amount equally\") &&\r\n      this.state.isExpenseInputValid\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.state.groupSplitMethod === \"Manually\" &&\r\n      this.state.isSharedInputValid && this.state.isExpenseInputValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  localOnClickHandler = () => {\r\n    const newState = {\r\n      currentUser: this.state.currentUser,\r\n      currentUserShare: this.state.currentUserShare,\r\n      groupUserList: this.state.groupUserList,\r\n      borrowerShareArr: this.state.borrowerShareArr,\r\n      groupSplitMethod: this.state.groupSplitMethod,\r\n      eqBorrowerShare: this.state.eqBorrowerShare,\r\n    };\r\n\r\n    this.props.onClickHandler(newState);\r\n    this.props.history.prev = \"/groupExpenseContainer\";\r\n    this.props.history.modalContent = \"The group expense was added successfully, please use the search to confirm.\";\r\n    this.props.history.push(\"/searchUser\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          <GroupExpense\r\n            groupUserList={this.state.groupUserList}\r\n            userList={this.state.userList}\r\n            currentUser={this.state.currentUser}\r\n            currentUserShare={this.state.currentUserShare}\r\n            showTable={this.state.showTable}\r\n            handleSelectForUser={(eventId) =>\r\n              this.selectHandlerForCurrentUser(eventId)\r\n            }\r\n            onSelect={(eventId) => this.onSelectHandlerForGroup(eventId)}\r\n            onChangeForGp={(event) => this.onChangeHandler(event)}\r\n            onSelectforSplitter={(eventId) =>\r\n              this.splitHandlerForGroup(eventId)\r\n            }\r\n            onChangeforGpManual={this.onChangeHandlerForGpManual}\r\n            submitStatus={this.submitStatusHandlerForGroup()}\r\n            groupSplitMethod={this.state.groupSplitMethod}\r\n            classForExpenseInput={this.classForExpenseInput}\r\n            classForSharedInput={this.classForSharedInput}\r\n            classForSharedInputArr={this.classForSharedInputArr}\r\n            showManualSplitter={this.state.showManualSplitter}\r\n            onClick={this.localOnClickHandler}\r\n          >\r\n            {this.state.userList}\r\n          </GroupExpense>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGraph: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClickHandler: (expense_obj) => {\r\n      dispatch({ type: \"update_group_expense\", expense_obj: expense_obj });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(GroupExpenseContainer));\r\n","import React, { Component } from \"react\";\r\nimport UserExpenseContainer from \"./userExpenseContainer\";\r\nimport GroupExpenseContainer from './groupExpenseContainer';\r\nimport Dropdown from \"../../components/UI/dropdown\";\r\n\r\nclass Expense extends Component {\r\n  state = {\r\n    splitWith: \"Split With?\",\r\n  };\r\n\r\n  finalExpenseDisplay = () => {\r\n    const localSplitHow = this.state.splitWith;\r\n    let returnVal = null;\r\n    if (localSplitHow === \"Split With?\") {\r\n      returnVal = (\r\n        <Dropdown\r\n          title={localSplitHow}\r\n          size=\"lg\"\r\n          handleSelect={(eventId) => this.setState({ splitWith: eventId })}\r\n        >\r\n          {[\"Single User\", \"Group\"]}\r\n        </Dropdown>\r\n      );\r\n    } else if (localSplitHow === \"Single User\") {\r\n      returnVal = (\r\n        <UserExpenseContainer />\r\n      );\r\n    } else {\r\n      returnVal = (\r\n        <GroupExpenseContainer />\r\n      );\r\n    }\r\n\r\n    return returnVal;\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.finalExpenseDisplay()}</React.Fragment>;\r\n  }\r\n}\r\n\r\n\r\nexport default Expense;\r\n","import React, { useRef } from \"react\";\r\nimport Dropdown from \"../../components/UI/dropdown\";\r\nimport classes from \"./expense.module.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Button,\r\n  Overlay,\r\n} from \"react-bootstrap\";\r\n\r\nconst UserExpense = (props) => {\r\n  const targetExpense = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>\r\n          <Dropdown\r\n            title={props.borrower}\r\n            handleSelect={props.handleSelectForBorrower}\r\n            size=\"lg\"\r\n          >\r\n            {props.userList}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col>\r\n          <h5 className={classes.para}>want's to settle due with</h5>\r\n        </Col>\r\n        <Col>\r\n          <Dropdown\r\n            title={props.lender}\r\n            handleSelect={props.handleSelectForLender}\r\n            size=\"lg\"\r\n          >\r\n            {props.lenderList}\r\n          </Dropdown>\r\n        </Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n      </Row>\r\n      {props.lender !== \"Settle With?\" ? (\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col>\r\n              <Form.Label style={{marginTop: \"20px\"}}>\r\n                <h5 className={classes.label}>Enter Amount to be settled:</h5>\r\n              </Form.Label>\r\n              <InputGroup style={{ marginBottom: \"10px\" }} className=\"mb-2\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Rs</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  className={classes[props.classForExpenseInput]}\r\n                  ref={targetExpense}\r\n                  id=\"inlineFormInputGroup\"\r\n                  onChange={props.onChangeHandler}\r\n                />\r\n              </InputGroup>\r\n              <Overlay\r\n                target={targetExpense.current}\r\n                show={props.classForExpenseInput ? true : null}\r\n                placement=\"right\"\r\n              >\r\n                {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n                  <div\r\n                    {...props}\r\n                    style={{\r\n                      backgroundColor: \"rgba(255, 100, 100, 0.85)\",\r\n                      padding: \"2px 10px\",\r\n                      color: \"white\",\r\n                      borderRadius: 3,\r\n                      ...props.style,\r\n                    }}\r\n                  >\r\n                    Please enter a valid integer and <br /> an amount less than\r\n                    or equal <br /> to the owed value\r\n                  </div>\r\n                )}\r\n              </Overlay>\r\n            </Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Button\r\n              disabled={!props.submitStatus}\r\n              onClick={props.onClicked}\r\n              className={classes.button}\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              block\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n          <Row>\r\n            <h5 style={{ margin: \"auto\", marginBottom: \"25px\" }}>OR</h5>\r\n          </Row>\r\n          <Row>\r\n            <Col></Col>\r\n            <Col></Col>\r\n            <Button\r\n              onClick={props.settleAllClick}\r\n              className={classes.button}\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              block\r\n            >\r\n              Settle All\r\n            </Button>\r\n            <Col></Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </React.Fragment>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserExpense;\r\n","import React, { Component } from \"react\";\r\nimport SettleUp from \"../../components/expense/settleUp\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router';\r\n\r\nclass SettleUpContainer extends Component {\r\n    state = {\r\n        userList: Object.keys(this.props.userGraph),\r\n        borrower: \"Who Are You?\",\r\n        lender: \"Settle With?\",\r\n        lenderList: [],\r\n        currentSettleAmt: \"0\",\r\n        totalSettleAmt: \"0\",\r\n        isExpenseInputValid: false,    \r\n    };\r\n\r\n    classForExpenseInput = null;\r\n\r\n    validateNumber = (strNumber) => {\r\n        var regExp = new RegExp(\"^\\\\d+$\");\r\n        var isValid = regExp.test(strNumber);\r\n        return isValid;\r\n    };\r\n\r\n    borrowerSelectHandler = (eventId) => {\r\n        const tempLenderList = []\r\n        const tempUserGraph = {...this.props.userGraph}\r\n        for(const user in tempUserGraph){\r\n            if(user === eventId){\r\n                continue;\r\n            }\r\n            if(eventId in tempUserGraph[user.toString()].neighbours){\r\n                tempLenderList.push(user);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            borrower: eventId,\r\n            lenderList: tempLenderList\r\n        })\r\n    }\r\n\r\n    lenderSelectHandler = (eventId) => {\r\n        const tempUserGraph = {...this.props.userGraph}\r\n        const tempBorrower = this.state.borrower\r\n        this.setState({\r\n            lender: eventId, \r\n            totalSettleAmt: tempUserGraph[eventId.toString()].neighbours[tempBorrower]\r\n        })\r\n    }\r\n \r\n    onAmtChangeHandler = (event) => {\r\n        if (this.validateNumber(event.target.value)){\r\n            if(parseInt(event.target.value) <= parseInt(this.state.totalSettleAmt)){\r\n                this.classForExpenseInput = null;\r\n                this.setState({\r\n                    currentSettleAmt: event.target.value,\r\n                    isExpenseInputValid: true,\r\n                });\r\n                return;\r\n            }\r\n            \r\n        }\r\n        this.classForExpenseInput = \"formControl\";\r\n            this.setState({\r\n                isExpenseInputValid: false\r\n            })\r\n    }\r\n\r\n    submitStatusHandler = () => {\r\n        if(this.state.isExpenseInputValid){\r\n            return true;\r\n        }   \r\n        return false;\r\n    }\r\n\r\n    localOnClickHandler = (type) => {\r\n        let newState = {};\r\n        if(type === \"partial\"){\r\n            newState = {\r\n                lender: this.state.lender,\r\n                borrower: this.state.borrower,\r\n                currentSettleAmt: this.state.currentSettleAmt,\r\n                totalSettleAmt: this.state.totalSettleAmt\r\n            }\r\n    \r\n            this.props.onClickHandler(newState);\r\n            this.props.history.modalContent = \"Partial due settlement completed successfully, please use the search to confirm.\";\r\n        }\r\n        else{\r\n            newState = {\r\n                lender: this.state.lender,\r\n                borrower: this.state.borrower,\r\n            }\r\n    \r\n            this.props.settleAllClickHandler(newState);\r\n            this.props.history.modalContent = \"Complete due settlement was successfull, please use the search to confirm.\";\r\n        }\r\n\r\n        this.props.history.prev = \"/settleUp\";\r\n        this.props.history.push(\"/searchUser\");\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<React.Fragment>\r\n            <SettleUp \r\n                borrower={this.state.borrower}\r\n                lender={this.state.lender}\r\n                userList={this.state.userList}\r\n                lenderList={this.state.lenderList}\r\n                classForExpenseInput={this.classForExpenseInput}\r\n                handleSelectForBorrower={(eventId) => this.borrowerSelectHandler(eventId)}\r\n                handleSelectForLender={(eventId) => this.lenderSelectHandler(eventId)}\r\n                onChangeHandler={(event) => this.onAmtChangeHandler(event)}\r\n                submitStatus={this.submitStatusHandler()}\r\n                settleAllClick={() => this.localOnClickHandler(\"all\")}\r\n                onClicked={() => this.localOnClickHandler(\"partial\")}\r\n            />\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userGraph: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickHandler: (expense_obj) => {\r\n            dispatch({ type: \"settle_due\", expense_obj: expense_obj });\r\n        },\r\n        settleAllClickHandler: (expense_obj) => {\r\n            dispatch({type: \"settle_due_all\", expense_obj: expense_obj});\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SettleUpContainer));\r\n","import React, { Component } from \"react\";\r\nimport UserDropdown from \"../../components/UI/dropdown\";\r\nimport { connect } from \"react-redux\";\r\nimport UserCard from \"../../components/UI/card\";\r\nimport Modal from \"../../components/UI/modal\";\r\n\r\nclass SearchUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let modalVal = false;\r\n    let modalContent = \"\";\r\n    if (this.props.history.prev !== undefined) {\r\n      modalVal = true;\r\n      modalContent = this.props.history.modalContent\r\n      delete this.props.history.prev;\r\n      delete this.props.history.modalContent;\r\n    }\r\n    this.state = {\r\n      showModal: modalVal,\r\n      modContent: modalContent,\r\n      showSearchResult: false,\r\n      userList: Object.keys(this.props.userGraph),\r\n      userExpenseList: null,\r\n      userName: null,\r\n    };\r\n  }\r\n\r\n  onSelectHandler = (eventId) => {\r\n    const currUser = this.props.userGraph[eventId.toString()];\r\n    const neighbourObj = currUser[\"neighbours\"];\r\n    const lentStrExpenseList = Object.keys(neighbourObj).map(\r\n      (currNeighbour) => {\r\n        const displayStrLent =\r\n          eventId +\r\n          \" has lent Rs \" +\r\n          neighbourObj[currNeighbour.toString()] +\r\n          \" to \" +\r\n          currNeighbour;\r\n        return displayStrLent;\r\n      }\r\n    );\r\n\r\n    const borrowedStrExpenseList = [];\r\n\r\n    for (let i = 0; i < this.state.userList.length; i++) {\r\n      const currentUser = this.state.userList[i];\r\n      const borrowNeighbourObj =\r\n        this.props.userGraph[currentUser.toString()].neighbours;\r\n      let displayStrBorr = \"\";\r\n      if (currentUser !== eventId) {\r\n        if (eventId in borrowNeighbourObj) {\r\n          displayStrBorr =\r\n            eventId +\r\n            \" has borrowed Rs \" +\r\n            borrowNeighbourObj[eventId.toString()] +\r\n            \" from \" +\r\n            currentUser;\r\n          borrowedStrExpenseList.push(displayStrBorr);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      userExpenseList: lentStrExpenseList.concat(borrowedStrExpenseList),\r\n      showSearchResult: true,\r\n      userName: eventId,\r\n    });\r\n  };\r\n\r\n  onModalCloseHandler = () => {\r\n    this.setState({\r\n      showModal: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal show={this.state.showModal} title=\"Operation Completed\" handleClose={this.onModalCloseHandler}> {this.state.modContent} </Modal>\r\n        <UserDropdown\r\n          title={\"Select User\"}\r\n          handleSelect={(eventId) => this.onSelectHandler(eventId)}\r\n          size=\"lg\"\r\n        >\r\n          {this.state.userList}\r\n        </UserDropdown>\r\n        {this.state.showSearchResult ? (\r\n          <UserCard\r\n            expList={this.state.userExpenseList}\r\n            title={\"Expense list for \" + this.state.userName}\r\n            text={\r\n              \"Total individual expense: Rs \" +\r\n              this.props.userGraph[this.state.userName.toString()].tExpense\r\n            }\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGraph: state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../components/UI/modal\";\r\nimport UserDropdown from \"../../components/UI/dropdown\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport classes from './deleteUser.module.css';\r\n\r\nclass DeleteUser extends Component {\r\n  \r\n    state = {\r\n      showModal: false,\r\n      userList: Object.keys(this.props.userGraph),\r\n      userName: \"Select User\",\r\n      showButton: false\r\n    }\r\n   \r\n  onSelectHandler = (eventId) => {\r\n    this.setState({\r\n        userName: eventId,\r\n        showButton: true\r\n    })\r\n  };\r\n\r\n  onClickHandler = () => {\r\n    this.props.onDeleteHandler(this.state.userName);\r\n    const tempArr = Object.keys(this.props.userGraph);\r\n    let index = tempArr.indexOf(this.state.userName);\r\n    tempArr.splice(index, 1);\r\n    this.setState({\r\n        showModal: true,\r\n        userList: tempArr\r\n    })\r\n  }\r\n\r\n  onModalCloseHandler = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      showButton: false,\r\n      userName: \"Select User\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.state.showModal}\r\n          title=\"User deleted successfully.\"\r\n          handleClose={this.onModalCloseHandler}\r\n        >\r\n          {\" \"}\r\n          The user {this.state.userName} was deleted successfully, please verify by searching.{\" \"}\r\n        </Modal>\r\n        <UserDropdown\r\n          title={this.state.userName}\r\n          handleSelect={(eventId) => this.onSelectHandler(eventId)}\r\n          size=\"lg\"\r\n        >\r\n          {this.state.userList}\r\n        </UserDropdown>\r\n        {this.state.showButton ? <Button\r\n          onClick={this.onClickHandler}\r\n          className={classes.button}\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          block\r\n        >\r\n          Delete User\r\n        </Button> : null}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userGraph: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeleteHandler: (delete_username) => {\r\n      dispatch({ type: \"delete_user\", delete_username: delete_username });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteUser);\r\n","import React, { Component } from \"react\";\n//import classes from \"./App.module.css\";\nimport {Switch, Route, Redirect} from 'react-router';\nimport Homepage from './containers/Homepage/homepage.js';\nimport Adduser from './containers/Users/adduser.js'\nimport GetUserDetails from './containers/Users/getUserDetails';\nimport Expense from './containers/Expense/expense';\nimport SettleUp from './containers/Expense/settleUpContainer';\nimport SearchUser from './containers/Users/searchUser';\nimport DeleteUser from './containers/Users/deleteUser';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/' exact component={Homepage} />\n        <Route path='/addUser' exact component={Adduser} />\n        <Route path='/userDetails' exact component={GetUserDetails} />\n        <Route path='/addExpense' exact component={Expense} />\n        <Route path='/settleUp' exact component={SettleUp} />\n        <Route path='/searchUser' exact component={SearchUser} />\n        <Route path='/deleteUser' exact component={DeleteUser} />\n        <Redirect to='/' />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/splitReducer\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"para\":\"expense_para__2gS1F\",\"label\":\"expense_label__3d5iS\",\"button\":\"expense_button__2Fx3M\",\"formControl\":\"expense_formControl__1weuS\",\"dropdown\":\"expense_dropdown__144UJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"homepage_button__1cXaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__3ZWSk\",\"h3\":\"input_h3__i2Tae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headings\":\"header_headings__2aAyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"adduser_button__3mSZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__27Y2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"getUserDetails_row__3gL_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"dropdown_dropdown__8Bgy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table_table__3QdRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"deleteUser_button__2zhUW\"};"],"sourceRoot":""}